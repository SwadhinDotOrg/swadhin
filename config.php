<?php

/**
 * Configuration
 * **************
 * There are some general purpose configuration, like Database settings 
 * or your base URL etc. 
 */
class Config {
    
    // Autoload Indexes
    
    const AUTOLOAD_MODEL = 'model';
    const AUTOLOAD_CLASS = 'class';

    /**
     * Database Configuration
     * @var mixed - Key-Value pair Array. 
     */
    static public $db = array(
        'driver' => 'pdo_mysql',            ///< Possible values: 'mysql' 'pdo_mysql'
        'host' => 'localhost',
        'username' => 'root',
        'password' => '',
        'database' => 'yourdbname'
    );

    /**
     * Base URL: Location where your site exists. Must begin with http or https
     * 
     * This is important to show images or javascript/css files properly.
     * \warning Please provide a slash (/) at the ending!
     * \note Available by constant: BASE_URL
     * 
     * @var string
     */
    const BASE_URL = 'http://localhost/swadhin/';

    /**
     * Templating/Theming
     * 
     * Name the default theme/template for the site. There is a built-in template 'WhiteLove'
     * You may also change template within your Controller class.
     * \note Available by constant: SITE_THEME
     * 
     * @var string
     */
    const SITE_THEME = 'WhiteLove';

    /**
     * Landing Page
     * 
     * This is the Controller path which is automatically loaded, if user does not 
     * provide any. For example, if user types http://example.com then this Controller class 
     * along with the View class will be loaded.
     * \note Available by constant: LANDING_PAGE
     * 
     * @var string
     */
    const LANDING_PAGE = 'index';

    /**
     * Autoloads - These classes/files will be loaded automatically.
     * Be careful when autoloading Custom classes this way. You do not need to autoload
     * any custom class, because custom classes are loaded on-the-fly. If you autoload a custom
     * class, it will be provided access to Core framework, which might be a security concern.
     * So, only autoload custom classes you trust.
     * 
     * @var mixed
     */
    static public $autoloads = array(
        self::AUTOLOAD_CLASS => array(), ///< Custom Classes
        self::AUTOLOAD_MODEL => array(), ///< MODEL Classes
    );

    /**
     * Clean/Nice URLs
     * 
     * If enabled, all URLs generated by the site will be "clean" or "nice", i.e. yoursite.com/a/b/c
     *  -   .htaccess should be activated.
     * If disabled, URL will look like: yoursite.com?p=a/b/c
     * \note Availabe by constant: NICE_URL_ENABLED
     * 
     * @var bool
     */
    const NICE_URL_ENABLED = false;

    /**
     * Prints various information availabe for debugging. Must be set to false in a production server.
     * \note Available by constant: DEBUG_MODE
     * 
     * @var bool 
     */
    const DEBUG_MODE = true;

    /**
     * URL Extention
     * (Only effective if NICE_URL_ENABLED is set to true)
     *
     * All of your URLs will end with this extention. Provide with leading dot (for example: '.html')
     * Leave empty, for no extentions.
     *
     * YOU MAY NEED TO CHANGE .htaccess FILE ACCORDINGLY IF YOU PUT ANY VALUE IN THIS! See line #10 of
     * .htaccess file - in place of ".html" you may put your desired URL extention.
     * 
     * @var string
     */
    const URL_EXTENTION = '';
    

    /**
     * Default Controller Function to call
     * 
     * This function will be called within your Controller class if not provided any.
     * 
     * @var string
     */
    const DEFAULT_CONTROLLER_FUNCTION = 'index';
    
    const TEST_MODE = false; 

    const THEME_LAYOUT_FILE = 'index.php';
    
    const THEME_DIRECTORY = 'templates/';        ///< Location of the directory where site themes are found. Relative to $project_dir
    const JS_DIRECTORY = 'client/js/';
    const FILES_DIRECTORY = 'files/';
    
    const PRINT_TRACE_IN_TEXTAREA = true;       ///< Whether print function call stacks withing a textarea when showing error
    /*
     * ***********************************************
     * MODIFY ONLY IF YOU UNDERSTAND WHAT YOU'RE DOING!
     * ***********************************************
     */
    
    public static $project_dir;
    public static $core_classes_dir;
    public static $custom_classes_dir;
    public static $thirdparty_dir;
    public static $themes_dir;
    public static $files_dir;
    
    public static $themes_url;
    public static $js_url;
    public static $files_url;
    
    public static $views_dir;
    public static $views_forms_dir;
    public static $controllers_dir;
    public static $models_dir;
    
    /**
     * Initial Configurations
     * You may change them to appropriate settings if necessary. However, the framework will work fine
     * without any change in following function. 
     */
    public static function initConfigurations(){
        // You are NOT supposed to change folloging line
        self::$project_dir = dirname(__FILE__) . '/'; 
        
        // You can change it to appropriate location where "core" & "custom" directory is found.
        self::$core_classes_dir = self::$project_dir . 'core/';
        self::$custom_classes_dir = self::$project_dir . 'custom/';
        
        // You may leave following lines intact
        self::$thirdparty_dir = self::$project_dir . '3rdparty/';
        self::$themes_dir = self::$project_dir . self::THEME_DIRECTORY;
        self::$files_dir = self::$project_dir . self::FILES_DIRECTORY;
        
        self::$themes_url = self::BASE_URL . self::THEME_DIRECTORY;
        self::$js_url = self::BASE_URL . self::JS_DIRECTORY;
        self::$files_url = self::BASE_URL . self::FILES_DIRECTORY;
        
        self::$views_dir = self::$project_dir . 'VIEW/';
        self::$views_forms_dir = self::$views_dir . 'forms/';
        self::$controllers_dir = self::$project_dir . 'CONTROL/';
        self::$models_dir = self::$project_dir . 'MODEL/';
    }
}
